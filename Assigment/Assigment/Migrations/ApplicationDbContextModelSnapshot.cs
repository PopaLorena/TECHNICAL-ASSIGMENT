// <auto-generated />
using System;
using Assigment.DatabaseContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Assigment.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Assigment.ModelsDao.CounterProposalDao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Payment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProposalId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("ProposalId");

                    b.ToTable("CounterProposal");
                });

            modelBuilder.Entity("Assigment.ModelsDao.InvolvedPartiesDao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AcceptedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsAccepted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("PartyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProposalId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AcceptedByUserId");

                    b.HasIndex("PartyId");

                    b.HasIndex("ProposalId");

                    b.ToTable("InvolvedParties");
                });

            modelBuilder.Entity("Assigment.ModelsDao.ItemDao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsShared")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Items");
                });

            modelBuilder.Entity("Assigment.ModelsDao.ItemPartyDao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PartyId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("PartyId");

                    b.ToTable("ItemParties");
                });

            modelBuilder.Entity("Assigment.ModelsDao.PartyDao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Parties");
                });

            modelBuilder.Entity("Assigment.ModelsDao.ProposalDao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Payment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("ItemId");

                    b.ToTable("Proposals");
                });

            modelBuilder.Entity("Assigment.ModelsDao.UserDao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PartyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("PartyId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Assigment.ModelsDao.CounterProposalDao", b =>
                {
                    b.HasOne("Assigment.ModelsDao.UserDao", "CreatedByUser")
                        .WithMany("CounterProposals")
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Assigment.ModelsDao.ProposalDao", null)
                        .WithMany("CounterProposals")
                        .HasForeignKey("ProposalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedByUser");
                });

            modelBuilder.Entity("Assigment.ModelsDao.InvolvedPartiesDao", b =>
                {
                    b.HasOne("Assigment.ModelsDao.UserDao", "AcceptedByUser")
                        .WithMany("InvolvedParties")
                        .HasForeignKey("AcceptedByUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Assigment.ModelsDao.PartyDao", null)
                        .WithMany("InvolvedParties")
                        .HasForeignKey("PartyId");

                    b.HasOne("Assigment.ModelsDao.ProposalDao", "Proposal")
                        .WithMany("InvolvedParties")
                        .HasForeignKey("ProposalId");

                    b.Navigation("AcceptedByUser");

                    b.Navigation("Proposal");
                });

            modelBuilder.Entity("Assigment.ModelsDao.ItemPartyDao", b =>
                {
                    b.HasOne("Assigment.ModelsDao.ItemDao", "Item")
                        .WithMany("ItemParties")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assigment.ModelsDao.PartyDao", "Party")
                        .WithMany("ItemParties")
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Party");
                });

            modelBuilder.Entity("Assigment.ModelsDao.ProposalDao", b =>
                {
                    b.HasOne("Assigment.ModelsDao.UserDao", "CreatedByUser")
                        .WithMany("Proposals")
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Assigment.ModelsDao.ItemDao", "Item")
                        .WithMany("Proposals")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("Assigment.ModelsDao.UserDao", b =>
                {
                    b.HasOne("Assigment.ModelsDao.PartyDao", "Party")
                        .WithMany("Users")
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Party");
                });

            modelBuilder.Entity("Assigment.ModelsDao.ItemDao", b =>
                {
                    b.Navigation("ItemParties");

                    b.Navigation("Proposals");
                });

            modelBuilder.Entity("Assigment.ModelsDao.PartyDao", b =>
                {
                    b.Navigation("InvolvedParties");

                    b.Navigation("ItemParties");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Assigment.ModelsDao.ProposalDao", b =>
                {
                    b.Navigation("CounterProposals");

                    b.Navigation("InvolvedParties");
                });

            modelBuilder.Entity("Assigment.ModelsDao.UserDao", b =>
                {
                    b.Navigation("CounterProposals");

                    b.Navigation("InvolvedParties");

                    b.Navigation("Proposals");
                });
#pragma warning restore 612, 618
        }
    }
}
